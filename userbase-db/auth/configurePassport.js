import passport from "passport";
import { Strategy as LocalStrategy } from "passport-local";
import { Pool } from "pg";
import pool from "../db/pool.js";
import bcrypt from "bcryptjs";

const setupLocalStrategy = () => {
    return new LocalStrategy(async (username, password, done) => {
        try {
            // log('–≤ localstrategy')
            //–∏—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ username –∏ password –≤ –±–¥
            const { rows } = await pool.query('SELECT * FROM users WHERE username = $1', [username]);
            const user = rows[0];

            console.log("üöÄ ~ newLocalStrategy ~ user:", user);
            
            //–µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            if (!user) {
                return done(null, false, { message: 'Incorrect username' });
            }

            const match = await bcrypt.compare(password, user.password);
            
            if (!match) {
                // passwords do not match!
                return done(null, false, { message: 'Incorrect password' });
            }
            //–µ—Å–ª–∏ —é–∑–µ—Ä –Ω–∞–π–¥–µ–Ω –∏ –ø–∞—Ä–æ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–ª—å—à–µ –æ–±—ä–µ–∫—Ç user, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∏–∑ –±–¥, –≤ serializeUser
            // log('–ü–∞—Ä–æ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, —é–∑–µ—Ä –Ω–∞–π–¥–µ–Ω')
            return done(null, user);
        } catch (err) {
            return done(err);
        }
    })
}

export const configurePassport = (passport) => {
    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è 
    passport.use(setupLocalStrategy());
    
    //–±–µ—Ä–µ–º –∏–∑ user —Ç–æ–ª—å–∫–æ id, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ —Å–µ—Å—Å–∏—é –≤–µ—Å—å –æ–±—ä–µ–∫—Ç (–Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Ç–∞–º - —Ö–µ—à –ø–∞—Ä–æ–ª—è, –∏–º–µ–π–ª –∏—Ç–¥. –¢–∞–∫–∂–µ –æ–±—ä–µ–∫—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–∏–º -> —Ä–∞—Å—Ö–æ–¥—É–µ—Ç –ø–∞–º—è—Ç—å —Å–µ—Ä–≤–µ—Ä–∞). –ó–∞—Ç–µ–º —ç—Ç–æ—Ç id –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ —Å–µ—Å—Å–∏—é: req.session.passport = { user: user.id }
    /*
    serializeUser –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –û–î–ò–ù –†–ê–ó –ø—Ä–∏ –ª–æ–≥–∏–Ω–µ ‚Üí –∫–ª–∞–¥—ë—Ç user.id (–∏–ª–∏ –¥—Ä—É–≥–æ–µ) –≤ —Å–µ—Å—Å–∏—é.
    */
    passport.serializeUser((user, done) => {
        // console.log("üöÄ ~ passport.serializeUser ~ user:", user);
    
        done(null, user.id);
    });
    
    /*user.id —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ Session store –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –¢–∞–º –∂–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç—Å—è Session ID: 
    Session store:
        {
            id: "abc123",
            passport: { user: 42 }
        }
    */
    
    /*–í –æ—Ç–≤–µ—Ç–µ –∫–ª–∏–µ–Ω—Ç—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∫—É–∫–∞ —Å Session ID:  Set-Cookie: connect.sid=abc123. –û–Ω–∞ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ. –î–ª—è –∫–∞–∂–¥–æ–π —Å–µ—Å—Å–∏–∏ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å–≤–æ—è –∫—É–∫–∞ - –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.
    */
    
    //deserializeUser –≤–∏–¥–∏—Ç –≤ —Å–µ—Å—Å–∏–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π user.id –∏ –∫–ª–∞–¥–µ—Ç –µ–≥–æ –≤ req.user.id. –ó–∞—Ç–µ–º –ø–æ —ç—Ç–æ–º—É id –º–æ–∂–Ω–æ –¥–æ—Å—Ç–∞–≤–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —é–∑–µ—Ä–∞ –∏–∑ –±–∞–∑—ã –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö
    /*
    deserializeUser –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ö–ê–ñ–î–û–ú –Ω–æ–≤–æ–º HTTP-–∑–∞–ø—Ä–æ—Å–µ, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è
    */
    passport.deserializeUser(async (id, done) => {
        try {
            //–ø–æ–ª—É—á–∞–µ–º —é–∑–µ—Ä–∞ —Å–æ —Å–≤–µ–∂–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –°–µ–π—á–∞—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–ª—è –ö–ê–ñ–î–û–ì–û –∑–∞–ø—Ä–æ—Å–∞. –ï—Å–ª–∏ –≤ –±—É–¥—É—â–µ–º —ç—Ç–æ –±—É–¥–µ—Ç –Ω–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ, –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å middleware loadCurrentUser –∏–∑ db/utils
            const { rows } = await pool.query('SELECT * FROM users WHERE id = $1', [id]);
            const user = rows[0];
    
            // console.log("üöÄ ~ passport.deserializeUser ~ user:", user);
    
            //–ø–µ—Ä–µ–¥–∞–µ—Ç user –≤ req.user, –∫–æ—Ç–æ—Ä—ã–π –¥–æ—Å—Ç—É–ø–µ–Ω –¥–∞–ª—å—à–µ –≤ –∑–∞–ø—Ä–æ—Å–µ
            done(null, user);
        } catch (err) {
            done(err);
        }
    });
}