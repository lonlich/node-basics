generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Comment {
  id        Int      @id @default(autoincrement()) @map("comment_id")
  authorId  Int?     @map("author_id")
  content   String
  createdAt DateTime? @default(now()) @db.Timestamp(6) @map("created_at")

  user User? @relation("UserComments", fields: [authorId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("comments")
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique @db.VarChar(255)
  password String?   @db.VarChar(255)
  role     Role      @default(USER)

  comments Comment[] @relation("UserComments")

  @@map("users")
}

enum Role {
  USER
  ADMIN
  MEMBER
}

model Game {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Decimal?    @db.Decimal(10, 2)
  createdAt   DateTime?   @default(now()) @db.Timetz(2) @map("created_at")

  genres GameGenre[]

  @@map("games")
}

model GameGenre {
  gameId  Int @map("game_id")
  genreId Int @map("genre_id")

  game  Game  @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  genre Genre @relation(fields: [genreId], references: [id])

  @@id([gameId, genreId])
  @@map("games_genres")
}

model Genre {
  id   Int    @id @default(autoincrement())
  name String?

  games GameGenre[]

  @@map("genres")
}

model Session {
  sid    String   @id @map("sid") @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
  @@map("sessions")
}

model Username {
  id        Int     @id @default(autoincrement())
  firstname String? @db.VarChar(255)
  lastname  String? @db.VarChar(255)
  email     String? @db.VarChar(255)
  age       Int?

  @@map("usernames")
}